@page "/army"
@inject BlazorBattles.Client.Services.IUnitService UnitService
@attribute [Authorize]

<h3>Army</h3>

@if (UnitService.MyUnits.Count == 0)
{
    <p>No Army yet. <NavLink class="btn btn-primary" href="build">Start Building!</NavLink></p>
}
@if (UnitService.Units.Count > 0)
{
    <div class="alert alert-info">Total Units: @UnitService.MyUnits.Count</div>
    @foreach (var userUnit in UnitService.MyUnits)
    {
        <div class="army-list">
            <div>
                @switch (userUnit.UnitId)
                {
                    case 1:<img src="icons/W_Sword006.png" />break;
                    case 2:<img src="icons/S_Bow08.png" />break;
                    case 3:<img src="icons/C_Hat01.png" />break;
                }
            </div>
            <div>
                @UnitService.Units.First(unit => unit.Id == userUnit.UnitId).Title
            </div>
            <div>
                @userUnit.HitPoints HP
            </div>
        </div>
    }
    <center>
        <button class="btn btn-warning" @onclick="ReviveArmy">Revive your army for 1,000 bananas</button>
    </center>
}
else
{
    <div class="alert alert-info">Loading Units...</div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
        await UnitService.LoadUserUnitsAsync();
    }

    private async Task ReviveArmy()
    {
        await UnitService.ReviveArmy();
    }
}
