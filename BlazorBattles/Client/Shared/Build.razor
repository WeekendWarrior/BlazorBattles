@page "/build"
@inject BlazorBattles.Client.Services.IBananaService BananaService
@inject BlazorBattles.Client.Services.IUnitService UnitService
@inject IToastService ToastService
@attribute [Authorize]

<h3>Build</h3>

<div class="form-group">
    <select @bind="selectedUnitId" class="form-control">
        @foreach (var unit in UnitService.Units)
        {
            <option value="@unit.Id">@unit.Title // @unit.BananaCost Bananas</option>
        }
    </select>
</div>

<button class="btn btn-primary" @onclick="BuildUnit">Build</button>

@if (needMoreBananas)
{
    <div class="validation-message">Not enough Bananas! :(</div>
}

@if (UnitService.MyUnits.Count > 0)
{
    <div><NavLink class="btn btn-primary" href="army">See your Army! (@UnitService.MyUnits.Count units) </NavLink></div>
}

@code {
    int selectedUnitId = 1;

    bool needMoreBananas = false;

    public async void BuildUnit()
    {
        await UnitService.AddUnit(selectedUnitId);
        await UnitService.LoadUserUnitsAsync();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUserUnitsAsync();
        await UnitService.LoadUnitsAsync();
    }

    protected override void OnInitialized()
    {
        UnitService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UnitService.OnChange -= StateHasChanged;
    }
}
